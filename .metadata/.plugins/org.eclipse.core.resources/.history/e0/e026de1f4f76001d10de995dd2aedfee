
public class Driver {
	
public static void main(String[] args) {
	Elma [] elmalar = new Elma[10]; // elma dizisi oluşturduk
		
	elmalar[0] = new Elma(10,"Sarı");
	elmalar [1] = new Elma (20,"Yeşil");
	elmalar[2] =new Elma(30,"Sarı");
	elmalar [3] =new Elma(75,"Turuncu");
	elmalar[4] = new Elma (24,"Kırmızı");
	elmalar[5] = new Elma(10,"Sarı");
	elmalar [6] = new Elma (20,"Yeşil");
	elmalar[7] =new Elma(100,"Sarı");
	elmalar [8] =new Elma(25,"Turuncu");
	elmalar[9] = new Elma (80,"Kırmızı");
	
	/*renkFiltrele("Sarı",elmalar);
	System.out.println("-------------------");
	agirlikFiltrele(50,elmalar);
	System.out.println("-------------");
	agirlikFiltrele2(50,elmalar);*/
	RenkFiltresi renkFiltresi = new RenkFiltresi ();
	AgirlikFiltresi agirlikFiltresi = new AgirlikFiltresi();
	filtrele (agirlikFiltresi,elmalar);
}

public static void filtrele(ElmaFiltresi elmaFiltresi,Elma[] elmalar) {
	for (int i =0; i<elmalar.length;i++) {
		Elma elma = elmalar[i];
		if(elmaFiltresi.filtrele(elma)) {
			System.out.println(elma.getAgirlik() +  "  " + elma.getRenk());
		}
	}
}

	public static void renkFiltrele(String renk,Elma[] elmalar) { // bu metodun amacı kendisine gönderilen elmaları filtrelemek olucak
	
		for (int i = 0; i<elmalar.length;i++) {
			Elma elma=elmalar[i];
			if (elma.getRenk().equals(renk)) {
				System.out.println(elma.getRenk() +  " " +elma.getAgirlik());
			}
			
		}
	
		}
	public static void agirlikFiltrele(int agirlik , Elma[] elmalar) {
		for (int i=0; i<elmalar.length;i++) {
			Elma elma =elmalar[i];
			if (elma.getAgirlik() >= agirlik) {
				System.out.println(elma.getAgirlik() +   " "  +elma.getAgirlik());
			}
		}
	}
	
	public static void agirlikFiltrele2(int agirlik, Elma[] elmalar) {
		for ( int i =0; i<elmalar.length; i++) {
			Elma elma=elmalar[i];
			if(elma.getAgirlik() < agirlik) {
				System.out.println(elma.getAgirlik() +  "  "  + elma.getAgirlik());
			}
		}
	}

	}

